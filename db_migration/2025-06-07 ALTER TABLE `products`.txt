CREATE TABLE `categories` (
	`id` INT(11) NOT NULL AUTO_INCREMENT,
	`category` VARCHAR(100) NOT NULL COLLATE 'utf8mb4_general_ci',
	`created_at` TIMESTAMP NULL DEFAULT NULL,
	`created_by` INT(11) NOT NULL DEFAULT '0',
	`updated_at` TIMESTAMP NULL DEFAULT NULL,
	`updated_by` INT(11) NOT NULL DEFAULT '0',
	`deleted_at` TIMESTAMP NULL DEFAULT NULL,
	`deleted_by` INT(11) NOT NULL DEFAULT '0',
	`deleted_reason` TEXT NULL DEFAULT NULL COLLATE 'utf8mb4_general_ci',
	`status_id` INT(11) NOT NULL DEFAULT '2',
	PRIMARY KEY (`id`) USING BTREE,
	UNIQUE INDEX `category` (`category`) USING BTREE
);

CREATE TABLE `products` (
	`id` INT(11) NOT NULL AUTO_INCREMENT,
	`code` VARCHAR(20) NOT NULL COLLATE 'utf8mb4_general_ci',
	`name` VARCHAR(255) NOT NULL COLLATE 'utf8mb4_general_ci',
	`uom_id` INT(11) NOT NULL,
	`category_id` INT(11) NOT NULL,
	`amount` DECIMAL(20,2) NOT NULL DEFAULT '0.00',
	`amount_po` DECIMAL(20,2) NOT NULL DEFAULT '0.00',
	`after_amount` DECIMAL(10,2) NOT NULL DEFAULT '0.00',
	`after_amount_po` DECIMAL(10,2) NOT NULL DEFAULT '0.00',
	`reorder_level` INT(11) NOT NULL DEFAULT '0',
	`created_at` TIMESTAMP NULL DEFAULT NULL,
	`created_by` INT(11) NOT NULL DEFAULT '0',
	`updated_at` TIMESTAMP NULL DEFAULT NULL,
	`updated_by` INT(11) NOT NULL DEFAULT '0',
	`deleted_at` TIMESTAMP NULL DEFAULT NULL,
	`deleted_by` INT(11) NOT NULL DEFAULT '0',
	`deleted_reason` TEXT NULL DEFAULT NULL COLLATE 'utf8mb4_general_ci',
	`status_id` INT(11) NOT NULL DEFAULT '2',
	PRIMARY KEY (`id`) USING BTREE,
	UNIQUE INDEX `code` (`code`) USING BTREE
);

CREATE TABLE stock (
    id INT PRIMARY KEY AUTO_INCREMENT,
    product_id INT NOT NULL,
    location_id INT NOT NULL,
    qty_on_hand DECIMAL(20,4) DEFAULT 0,
    qty_reserved DECIMAL(20,4) DEFAULT 0,
    qty_available DECIMAL(20,4) GENERATED ALWAYS AS (qty_on_hand - qty_reserved) STORED,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,    
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE RESTRICT,
    FOREIGN KEY (location_id) REFERENCES locations(id) ON DELETE RESTRICT,
    UNIQUE KEY unique_product_warehouse (product_id, location_id)
);

CREATE TABLE stock_movements (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
	`date` DATE NULL,
    product_id INT NOT NULL,
    location_id INT NOT NULL,
    movement_type ENUM('RECEIVE', 'RELEASE', 'TRANSFER', 'ADJUSTMENT', 'RESERVE') NOT NULL,
    qty INT NOT NULL,
    unit_cost DECIMAL(10,2),
    reference_type ENUM('PURCHASE', 'SALE', 'TRANSFER', 'ADJUSTMENT', 'RETURN', 'RESERVE') NOT NULL,
    reference_id INT,
    transfer_from_location_id INT NULL,
    transfer_to_location_id INT NULL,
    transfer_batch_id VARCHAR(50) NULL, -- Links related transfer records
    notes TEXT,
    created_by INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE,
    FOREIGN KEY (location_id) REFERENCES locations(id) ON DELETE CASCADE,
    FOREIGN KEY (transfer_from_location_id) REFERENCES locations(id) ON DELETE CASCADE,
    FOREIGN KEY (transfer_to_location_id) REFERENCES locations(id) ON DELETE CASCADE,
    INDEX idx_product_date (product_id, created_at),
    INDEX idx_movement_type (movement_type),
    INDEX idx_reference (reference_type, reference_id),
    INDEX idx_transfer_batch (transfer_batch_id)
);



CREATE TABLE suppliers (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    contact_person VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(20),
    address TEXT,
    city VARCHAR(100),
    state VARCHAR(100),
    zip_code VARCHAR(10),
    country VARCHAR(50),
    status_id INT DEFAULT 2,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP NULL,
    created_by INT DEFAULT 0,
    updated_by INT DEFAULT 0,
    deleted_by INT DEFAULT 0,
    deleted_reason TEXT,
    FOREIGN KEY (created_by) REFERENCES user(id) ON DELETE SET NULL,
    FOREIGN KEY (updated_by) REFERENCES user(id) ON DELETE SET NULL,
    FOREIGN KEY (deleted_by) REFERENCES user(id) ON DELETE SET NULL
);

CREATE TABLE purchase_order_status(
	id INT PRIMARY	KEY AUTO_INCREMENT,
	STATUS VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE purchase_orders (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    po_number VARCHAR(50) NULL,
    supplier_id INT NOT NULL,
    location_id INT NOT NULL,
    order_date DATE NOT NULL,
    expected_date DATE,
    received_date DATE,
    total_amount DECIMAL(12,2) DEFAULT 0,
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP DEFAULT NULL,
    created_by INT DEFAULT 0,
    updated_by INT DEFAULT 0,
    deleted_by INT DEFAULT 0,
    deleted_reason TEXT DEFAULT NULL,
    status_id INT DEFAULT 2,
    FOREIGN KEY (supplier_id) REFERENCES suppliers(id),
    FOREIGN KEY (location_id) REFERENCES locations(id),
    FOREIGN KEY (created_by) REFERENCES user(id),
    FOREIGN KEY (updated_by) REFERENCES user(id),
    FOREIGN KEY (deleted_by) REFERENCES user(id),
    FOREIGN KEY (status_id) REFERENCES purchase_order_status(id),
    INDEX idx_po_number (po_number)
);

CREATE TABLE purchase_order_items (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    purchase_order_id BIGINT NOT NULL,
    product_id INT NOT NULL,
    qty_ordered INT NOT NULL,
    qty_received INT DEFAULT 0,
    unit_cost DECIMAL(10,2) NOT NULL,
    total_cost DECIMAL(12,2) GENERATED ALWAYS AS (quantity_ordered * unit_cost) STORED,
    FOREIGN KEY (purchase_order_id) REFERENCES purchase_orders(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id)
);
